@*@model IEnumerable<WOS_.Models.ArticleModel>*@
@*@using WOS_.Extension;*@
@model PagedList.IPagedList<WOS_.Models.ArticleModel>
@using PagedList.Mvc;
@using WOS_.Helpers
@using WOS_.Models;
<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Articles";
}
<h2>Articles List</h2>

<div id="statisticsDiv">
    <p>Items.Found: @StatisticsHelper.ItemsFound </p>
    <p>Sum of the Times Cited: @StatisticsHelper.SumOfCitations </p>
    <p>Average Citations per Item: @StatisticsHelper.AverageNumOfCitations </p>
    <p>h-index: @StatisticsHelper.HIndex </p>
</div>

<p>
    <table id="ArticlesList" class="table">
        <tr>
            <th>
                Information
            </th>
            <th>
                @Html.ActionLink("Year", "Index", new { sortOrder = this.Session["DateSortParm"], author = this.Session["CurrentAuthor"] })
            </th>
            <th>
                @Html.ActionLink("Citations", "Index", new { sortOrder = this.Session["CitationsSortParam"], author = this.Session["CurrentAuthor"] })
            </th> 
        </tr> 

@foreach (var item in Model)
{
    if (item.FirstNotInHIndex)
    {
    <tr style="border-top:5pt solid black">

        <td>
            <b>@item.Title</b>
            <br />
            @string.Join("; ", item.Authors)
            <br />
            @item.ArticleInfo

        </td>
        <td>
            @item.Year

        </td>
        <td>
            @item.NumOfCitations
        </td>
    </tr>
}
else
{
    <tr>

        <td>
            <b>@item.Title</b>
            <br />
            @string.Join("; ", item.Authors)
            <br />
            @item.ArticleInfo

        </td>
        <td>
            @item.Year

        </td>
        <td>
            @item.NumOfCitations
        </td>
    </tr>
}

}
    </table>

    <br />
    <br />
    <br />
    <hr />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",  new { page, sortOrder = this.Session["CurrentSort"], author = this.Session["CurrentAuthor"] }))
